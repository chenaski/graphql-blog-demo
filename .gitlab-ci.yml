stages:
  - lint
  - build
  - deploy

image: node:14-alpine

lint:
  stage: lint
  allow_failure: true
  script:
    - npm run lint

check-types:
  stage: lint
  script:
    - npm install
    - npm run check-types

build:
  stage: build
  script:
    - npm install
    - NEXT_PUBLIC_HOST=http://$HOST:3000 NEXT_PUBLIC_FRONTEND_VERSION=$(git rev-parse --short HEAD) npm run build
  artifacts:
    paths:
      - .next

deploy:
  stage: deploy
  script:
    - apk --update add openssh-client rsync git
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - touch prisma/.env
    - echo "DATABASE_URL=$DATABASE_URL" > prisma/.env
    - rsync -a --progress --human-readable --delete
      --include ".next"
      --include "prisma/.env"
      --exclude-from ".gitignore"
      --exclude ".gitignore"
      --exclude ".git"
      . deploy@$HOST:~/realworld
    - BACKEND_VERSION=$(git rev-parse --short HEAD)
    - ssh deploy@$HOST -o SendEnv="BACKEND_VERSION" "pushd ~/realworld &&
      npm install --production &&
      npx prisma generate &&
      npx prisma migrate deploy &&
      popd &&
      BACKEND_VERSION=$BACKEND_VERSION pm2 restart ecosystem.config.js"
